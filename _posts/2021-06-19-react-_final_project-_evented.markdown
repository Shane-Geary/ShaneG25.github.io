---
layout: post
title:      "React- Final Project- Evented"
date:       2021-06-19 15:32:52 +0000
permalink:  react-_final_project-_evented
---


React is a framework built by the developers of Facebook and Instagram that is primarily used for front-end development. The language it's written in is Javascript but makes the structuring and general flow of your app much easier to follow and build out then traditonal JS. Learning React made the headache (at least it was for me) of learning Javascript worth it. It's like learning how to drive on a really old car with poor handling then switching to a brand new, off the lot car. 

With React, you get a much more understandable way of structuring your app when building it out with the idea of "components". A component lives in and IS a file much like how an object oriented class would be defined in it's own file. Since the component logic is written in Javascript instead of templates, you can easily pass rich data through your app and keep state out of the DOM. You're building encapsulated components that manage their own state, so you can then compose them to make complex UI's. In these components, we use a syntax extension to JavaScript called "JSX" to describe what the UI should look like. It produces React "elements" and the reason we use it is because React embraces the fact that rendering logic is inherently coupled with other UI logic: how events are handled, how the state changes over time, and how the data is prepared for display. And you can have all that logic in the same file that's rendering the DOM. React elements are plain objects that are cheap to create. Any valid JavaScript expression can be embedded in JSX by wrapping in curly braces. e.g { }. Components are quite versatile!

For this final project, we also had to implement Redux, which I will be going into detail about in my next blog post. But for this project, I built an app using my own Rails API for the back-end and obviously, React on the client side front-end. This app is a build off the idea for my prior projects revolving around live events and keeping logs of those events. This went a bit further with the UI where a user can create "groups" and those groups can create the logs of events they have attended or plan on attending. This can easily help people with similar interests connect and share their love of concerts, theater, sporting events etc. So with that, my app has 3 models: User, Group and Event. Event being the join table as it "belongs_to" a user and a group. Full user authentication is implemented to handle the registration of a new user signing up, an existing user logging back in, logging out the current user and also, auto-login functionality where the browser will remember your session and automatically log you back in if your token hasn't expired. It's a decent rough draft of what I hope to eventually build out to a deployable application that people will get some good use out of.


This being my final project and the end of my learning journey here at Flatiron, I find myself reflecting on things. It has definitely been the most difficult things I've taken on to learn in my life but I knew going into this field of study that it was the thing for me. Computer programming not only interests me but I enjoy it and the challenges it provides. Once you get to a point in your education where you are able to figure out errors/issues on your own, the feeling and confidence boost in your abilities is worth the struggle it took to get there. Seeing things come together and being able to build things you couldn't even fathom doing before is exciting and a huge feat. With Software Engineering, I feel there is this bridge where you're spending so many weeks/months in the "head-scratching" phase of learning the technical aspects of the code and how things work and how to get them TO work, and then coming into the phase of creativity starting to flow once you're comfortable enough with the code to be able to apply creativity to the things you're building. What a cool concept! (at least once you get to the second part, it will feel like that ;)
